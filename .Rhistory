cleandat <- ComBat(geneExpression, month, mod)
res<-genefilter::rowttests(cleandat,factor(sex))
qvals <- qvalue(res$p.value)$qvalue
index <- which(qvals<0.1)
length(index)
X = model.matrix(~sex+month)
res <- t( sapply(1:nrow(geneExpression),function(j){
y <- geneExpression[j,]
fit = lm(y~X)
summary(fit)$coef
}))
res <- data.frame(res)
names(res) <- c("dm","p.value")
qvals <- qvalue(res$p.value)$qvalue
X = model.matrix(~sex+month)
i = 234
y = geneExpression[i,]
fit = lm(y~X)
summary(fit)$coef
X = model.matrix(~sex+month)
res <- t( sapply(1:nrow(geneExpression),function(j){
y <- geneExpression[j,]
fit = lm(y~X)
summary(fit)$coef[3,c(1,4)]
}))
res <- data.frame(res)
names(res) <- c("dm","p.value")
qvals <- qvalue(res$p.value)$qvalue
index <- which(qvals<0.1)
length(index)
y = geneExpression[,1:2]
library(limma)
plotMA(y(1/√2 1/√2 1√2 −1/√2))
y = geneExpression[,1:2]
head(y)
y = geneExpression - rowMeans(geneExpression)
library(RColorBrewer)
library(rafalib)
n <- nrow(pData(e))
o <- order(pData(e)$date)
Y=exprs(e)
cors=cor(Y-rowMeans(Y))
cols=colorRampPalette(rev(brewer.pal(11,"RdBu")))(100)
mypar()
image(1:n,1:n,cors,xaxt="n",yaxt="n",col=cols,xlab="",ylab="",zlim=c(-1,1))
Y=exprs(e)[,o]
cors=cor(Y-rowMeans(Y))
cols=colorRampPalette(rev(brewer.pal(11,"RdBu")))(100)
mypar()
image(1:n,1:n,cors,xaxt="n",yaxt="n",col=cols,xlab="",ylab="",zlim=c(-1,1))
y
s = svd(y)
o <- order(pData(e)$date)
cols <-as.numeric(month)
plot(s$v[o,1],pch=21,cex=1.25,bg=cols[o],ylab="First PC",xaxt="n",xlab="")
s = svd(y)
o <- order(pData(e)$date)
cols <-as.numeric(month)
plot(s$v[o,],pch=21,cex=1.25,bg=cols[o],ylab="First PC",xaxt="n",xlab="")
s = svd(y)
mypar(1,1)
o <- order(pData(e)$date)
cols <-as.numeric(month)
plot(s$v[o,1],pch=21,cex=1.25,bg=cols[o],ylab="First PC",xaxt="n",xlab="")
times <-sampleInfo$date
mypar(1,1)
o=order(times)
plot(times[o],pch=21,bg=as.numeric(batch)[o],ylab="date"
plot(times[o],pch=21,bg=as.numeric(month)[o],ylab="date")
times <-sampleInfo$date
mypar(1,1)
o=order(times)
plot(times[o],pch=21,bg=as.numeric(month)[o],ylab="date")
times <-sampleInfo$date
s <- svd(y)
mypar(1,1)
o<-order(times)
cols <- as.numeric(month)
plot(s$v[o,1],pch=21,cex=1.25,bg=cols[o],ylab="First PC",xaxt="n",xlab="")
times <-sampleInfo$date
s <- svd(y)
mypar(1,1)
o<-order(times)
cols <- as.numeric(month)
plot(s$v[o,],pch=21,cex=1.25,bg=cols[o],ylab="First PC",xaxt="n",xlab="")
times <-sampleInfo$date
s <- svd(y)
mypar(1,1)
o<-order(times)
cols <- as.numeric(month)
plot(s$v[o,],pch=21,cex=1.25,bg=cols[o],ylab=" PC",xaxt="n",xlab="date")
text(s$v[0,],times, cex= 0.7)
text(times, cex= 0.7)
o
times
times <-sampleInfo$date
s <- svd(y)
mypar(1,1)
o<-order(times)
cols <- as.numeric(month)
plot(s$v[o,],pch=21,cex=1.25,bg=cols[o],ylab=" PC",xlab="date")
text(times, cex= 0.7)
times <-sampleInfo$date
s <- svd(y)
mypar(1,1)
o<-order(times)
cols <- as.numeric(month)
plot(s$v[o,1],pch=21,cex=1.25,bg=cols[o],ylab=" PC",xlab="date")
times <-sampleInfo$date
s <- svd(y)
mypar(1,1)
o<-order(times)
cols <- as.numeric(month)
plot(s$v[o,],pch=21,cex=1.25,bg=cols[o],ylab=" PC",xlab="date")
times <-sampleInfo$date
s <- svd(y)
mypar(1,1)
o<-order(times)
cols <- as.numeric(month)
plot(s$v[o,],pch=21,cex=1.25,bg=cols[o],ylab=" PC",xlab="date")
plot(s$v[o,1],pch=21,cex=1.25,bg=cols[o],ylab=" PC",xlab="date")
times <-sampleInfo$date
s <- svd(y)
mypar(1,1)
o<-order(times)
cols <- as.numeric(month)
plot(s$v[o,],pch=21,cex=1.25,bg=cols[o],ylab=" PC")
plot(s$v[o,1],pch=21,cex=1.25,bg=cols[o],ylab="First PC")
o
arrange(times)
(times)
times
y = geneExpression - rowMeans(geneExpression)
s <- svd(y)
pcs = svd(y)$v
mypar(1,1)
plot(s$d^2/sum(s$d^2),ylab="% variance explained",xlab="Principal component")
abline(h = 0.1)
corr <- sapply(1:ncol(s$v),function(i){
fit <- lm(s$v[,i]~as.factor(month))
return( summary(fit)$adj.r.squared ) })
mypar()
plot(seq(along=corr), corr, xlab="PC")
corr[1]
corr <- sapply(1:ncol(s$v),function(i){
fit <- lm(s$v[,i]~as.factor(sex))
return( summary(fit)$adj.r.squared ) })
mypar()
plot(seq(along=corr), abs(corr), xlab="PC")
corr[1]
pcs = svd(y)$v[,1:2]
X = model.matrix(~sex+pcs)
res <- t( sapply(1:nrow(geneExpression),function(j){
y <- geneExpression[j,]
fit = lm(y~X)
summary(fit)$coef[2,c(1,4)]
}))
res <- data.frame(res)
names(res) <- c("dm","p.value")
qvals <- qvalue(res$p.value)$qvalue
index <- which(qvals<0.1)
length(index)
geneExpression = exprs(e)
sampleInfo = pData(e)
install_bioc("Biobase")
install_github("genomicsclass/GSE5859")
library(tissuesGeneExpression)
library(GSE5859)
data(GSE5859)
install.packages("rafalib")
install_bioc("Biobase")
install.packages("rafalib")
knitr::opts_chunk$set(echo = TRUE)
geneExpression = exprs(e)
sampleInfo = pData(e)
exprs(e)
knitr::opts_chunk$set(echo = TRUE)
library(devtools)
install_github("genomicsclass/GSE5859Subset")
install_github("genomicsclass/tissuesGeneExpression")
library(tissuesGeneExpression)
library(GSE5859Subset)
data(GSE5859Subset)
source("https://bioconductor.org/biocLite.R")
library(dagdata)
data(admissions)
admissions
index = which(admissions$Gender==1)
accepted= sum(admissions$Number[index] * admissions$Percent[index]/100)
applied = sum(admissions$Number[index])
accepted/applied
index = which(admissions$Gender ==0)
accepted= sum(admissions$Number[index] * admissions$Percent[index]/100)
applied = sum(admissions$Number[index])
accepted/applied
index = admissions$Gender==1
men = admissions[index,]
women = admissions[!index,]
menYes = sum(men$Number*men$Percent/100)
menNo = sum(men$Number*(1-men$Percent/100))
womenYes = sum(women$Number*women$Percent/100)
womenNo = sum(women$Number*(1-women$Percent/100))
tab = matrix(c(menYes,womenYes,menNo,womenNo),2,2)
print(chisq.test(tab)$p.val)
admissions
admissions
Majors <- as.vector(unique(admissions$Major))
h <- vector("double", length(Majors))
indexh = 1
for (i in Majors) {
index = which(admissions$Major == i)
accepted= sum(admissions$Number[index] * admissions$Percent[index]/100)
applied = sum(admissions$Number[index])
h[[indexh]] <-  accepted/applied
indexh = indexh +1
}
h
hardest_index <- which.min(h)
hardest_major <- Majors[hardest_index]
hardest_major
proportion_accepted <- min(h)
proportion_accepted*100
library(dplyr)
males <- admissions %>%
filter (Gender == 1)
horder <- sort(h, decreasing = TRUE)
mcorrelations <- cbind(horder, males$Number)
mcorrelations
plot(mcorrelations)
cor(horder, males$Number)
females <- admissions %>%
filter (Gender == 0)
horder <- sort(h, decreasing = TRUE)
fcorrelations <- cbind(horder, females$Number)
fcorrelations
plot(fcorrelations)
cor(horder, females$Number)
install_bioc("Biobase")
install_github("genomicsclass/GSE5859")
library(tissuesGeneExpression)
library(GSE5859)
data(GSE5859)
geneExpression = exprs(e)
sampleInfo = pData(e)
year = format(sampleInfo$date,"%y")
table(year,sampleInfo$ethnicity)
yr_eth <- table(year,sampleInfo$ethnicity)
numyears = 0
yr_eth <- table(year,sampleInfo$ethnicity)
q = c()
for (i in seq_along(1:nrow(yr_eth))){
if((yr_eth[i,1] == 0 & yr_eth[i,2] == 0) | (yr_eth[i,1] ==0 & yr_eth[i,3] ==0) | (yr_eth[i,2] == 0 & yr_eth[i,3] == 0)){
numyears = numyears
}
else{
numyears = numyears +1
}
}
numyears
month.year = format(sampleInfo$date,"%m%y")
ym_eth <- table(month.year,sampleInfo$ethnicity)
num_ym = 0
for (i in seq_along(1:nrow(ym_eth))){
if((ym_eth[i,1] == 0 & ym_eth[i,2] == 0) | (ym_eth[i,1] ==0 & ym_eth[i,3] ==0) | (ym_eth[i,2] == 0 & ym_eth[i,3] == 0)){
num_ym = num_ym
}
else{
num_ym = num_ym +1
}
}
num_ym
prop_multiple_eth <- ((nrow(ym_eth) - num_ym)/nrow(ym_eth))*100
prop_multiple_eth
ym_eth
library(dplyr)
install_bioc("genefilter")
library("genefilter")
dates <- pData(e)$date
index = which(sampleInfo$ethnicity == "CEU")
year = factor(format(dates, "%y"))[index]
year = droplevels(year, c("04","05","06"))
pvals<- rowttests(geneExpression[,index],year)$p.value
biocLite("qvalue")
library(qvalue)
qvals<-qvalue(pvals)$qvalue
index <- which(qvals <0.05)
result <- res$p.value[index]
length(result)
pi0<-qvalue(pvals)$pi0
pi0
index = which(sampleInfo$ethnicity == "CEU")
year = factor(format(dates, "%y"))[index]
year = droplevels(year, c("02","05","06"))
pvals<- rowttests(geneExpression[,index],year)$p.value
qvals<-qvalue(pvals)$qvalue
index <- which(qvals <0.05)
result0 <- res$p.value[index]
length(result)
index = which(sampleInfo$ethnicity==c("ASN", "CEU"))
ethnicity = factor(sampleInfo$ethnicity)[index]
ethnicity = droplevels(ethnicity, "HAN")
pvals<- rowttests(geneExpression[,index],ethnicity)$p.value
qvals<-qvalue(pvals)$qvalue
index <- which(qvals <0.05)
result <- res$p.value[index]
length(result)
year = format(sampleInfo$date,"%y")
sampleinfoyear <-cbind(year, sampleInfo)
index = which(sampleinfoyear$year=="05")
ethnicity = factor(sampleinfoyear$ethnicity)[index]
ethnicity = droplevels(ethnicity, "HAN")
pvals<- rowttests(geneExpression[,index],ethnicity)$p.value
qvals<-qvalue(pvals)$qvalue
index <- which(qvals <0.05)
result <- res$p.value[index]
length(result)
table(sampleInfo$ethnicity[index])
year = format(sampleInfo$date,"%y")
sampleinfoyear <-cbind(year, sampleInfo)
index = which(sampleinfoyear$year=="05")
ethnicity = factor(sampleinfoyear$ethnicity)[index]
ethnicity = droplevels(ethnicity, "HAN", "CEU")
pvals<- rowttests(geneExpression[,index],ethnicity)$p.value
qvals<-qvalue(pvals)$qvalue
index <- which(qvals <0.05)
result <- res$p.value[index]
length(result)
library(GSE5859Subset)
data(GSE5859Subset)
sex = sampleInfo$group
month = factor( format(sampleInfo$date,"%m"))
table( sampleInfo$group, month)
library(GSE5859Subset)
data(GSE5859Subset)
res <- rowttests(geneExpression,as.factor( sampleInfo$group ))
qvals <-qvalue(res$p.value)$qvalue
index <- which(qvals <0.1)
length((res$p.value[index]))
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("hgfocus.db", version = "3.8")
library(hgfocus.db) ##install from Bioconductor
annot <- select(hgfocus.db, keys=featureNames(e), keytype="PROBEID", columns=c("CHR")) ##for genes with multiples, pick one
annot <-annot[match(featureNames(e),annot$PROBEID),]
annot$CHR <- ifelse(is.na(annot$CHR),NA,paste0("chr",annot$CHR))
head(annot)
res <- rowttests(geneExpression,as.factor( sampleInfo$group ))
qvals <- qvalue(res$p.value)$qvalue
index <- which(qvals<0.1)
list<- length((res$p.value[index]))
chr <- annot$CHR
y_sum <- sum(chr[index]=="chrY",na.rm=TRUE)
x_sum <- sum(chr[index]=="chrX",na.rm=TRUE)
proportion <- (y_sum + x_sum)/list
proportion *100
y_sum <- sum(chr[index]=="chrY",na.rm=TRUE)
y_sum
index2 <- index[(!chr[index] == "chrY") &!chr[index] == "chrX"]
pvals<- rowttests(geneExpression[index2,],month)$p.value
qvals<-qvalue(pvals, lambda = 0)$qvalue
index <- which(qvals <0.05)
result <- res$p.value[index]
length(result)
length(index2)
propor <- length(result)/length(index2)
propor*100
X = model.matrix(~sex+month)
i = 234
y = geneExpression[i,]
fit = lm(y~X)
summary(fit)$coef
X = model.matrix(~sex+month)
res <- t( sapply(1:nrow(geneExpression),function(j){
y <- geneExpression[j,]
fit = lm(y~X)
summary(fit)$coef[2,c(1,4)]
}))
res <- data.frame(res)
names(res) <- c("dm","p.value")
qvals <- qvalue(res$p.value)$qvalue
index <- which(qvals<0.1)
length(index)
chrx<- sum(chr[index]=="chrY",na.rm=TRUE)
chry<- sum(chr[index]=="chrX",na.rm=TRUE)
propor <- sum((chrx + chry)/ length(index))
propor*100
chry
chrx
library(sva)
mod <- model.matrix(~sex)
cleandat <- ComBat(geneExpression, month, mod)
res<-genefilter::rowttests(cleandat,factor(sex))
qvals <- qvalue(res$p.value)$qvalue
index <- which(qvals<0.1)
length(index)
X = model.matrix(~sex+month)
i = 234
y = geneExpression[i,]
fit = lm(y~X)
summary(fit)$coef
X = model.matrix(~sex+month)
res <- t( sapply(1:nrow(geneExpression),function(j){
y <- geneExpression[j,]
fit = lm(y~X)
summary(fit)$coef[3,c(1,4)]
}))
res <- data.frame(res)
names(res) <- c("dm","p.value")
qvals <- qvalue(res$p.value)$qvalue
index <- which(qvals<0.1)
length(index)
library(Biobase)
library(GSE5859Subset)
data(GSE5859Subset)
y = geneExpression[,1:2]
head(y)
y = geneExpression - rowMeans(geneExpression)
library(RColorBrewer)
library(rafalib)
n <- nrow(pData(e))
o <- order(pData(e)$date)
Y=exprs(e)
cors=cor(Y-rowMeans(Y))
cols=colorRampPalette(rev(brewer.pal(11,"RdBu")))(100)
mypar()
image(1:n,1:n,cors,xaxt="n",yaxt="n",col=cols,xlab="",ylab="",zlim=c(-1,1))
Y=exprs(e)[,o]
cors=cor(Y-rowMeans(Y))
cols=colorRampPalette(rev(brewer.pal(11,"RdBu")))(100)
mypar()
image(1:n,1:n,cors,xaxt="n",yaxt="n",col=cols,xlab="",ylab="",zlim=c(-1,1))
times <-sampleInfo$date
s <- svd(y)
mypar(1,1)
o<-order(times)
cols <- as.numeric(month)
plot(s$v[o,],pch=21,cex=1.25,bg=cols[o],ylab=" PC")
plot(s$v[o,1],pch=21,cex=1.25,bg=cols[o],ylab="First PC")
times
y = geneExpression - rowMeans(geneExpression)
s <- svd(y)
pcs = svd(y)$v
mypar(1,1)
plot(s$d^2/sum(s$d^2),ylab="% variance explained",xlab="Principal component")
abline(h = 0.1)
corr <- sapply(1:ncol(s$v),function(i){
fit <- lm(s$v[,i]~as.factor(month))
return( summary(fit)$adj.r.squared ) })
mypar()
plot(seq(along=corr), corr, xlab="PC")
corr[1]
corr <- sapply(1:ncol(s$v),function(i){
fit <- lm(s$v[,i]~as.factor(sex))
return( summary(fit)$adj.r.squared ) })
mypar()
plot(seq(along=corr), abs(corr), xlab="PC")
corr[1]
pcs = svd(y)$v[,1:2]
X = model.matrix(~sex+pcs)
res <- t( sapply(1:nrow(geneExpression),function(j){
y <- geneExpression[j,]
fit = lm(y~X)
summary(fit)$coef[2,c(1,4)]
}))
res <- data.frame(res)
names(res) <- c("dm","p.value")
qvals <- qvalue(res$p.value)$qvalue
index <- which(qvals<0.1)
length(index)
chrx<- sum(chr[index]=="chrY",na.rm=TRUE)
chry<- sum(chr[index]=="chrX",na.rm=TRUE)
propor <- sum((chrx + chry)/ length(index))
propor*100
library(sva)
library(Biobase)
library(GSE5859Subset)
data(GSE5859Subset)
s <- svd(geneExpression-rowMeans(geneExpression))
cor(sampleInfo$group,s$v[,1])
sex = sampleInfo$group
mod = model.matrix(~sex)
svafit = sva(geneExpression,mod)
head(svafit$sv)
for(i in 1:ncol(svafit$sv)){
print( cor(s$v[,i],svafit$sv[,i]) ) }
library (limma)
sex = sampleInfo$group
mod = model.matrix(~sex)
svafit = sva(geneExpression,mod)
svaX<-model.matrix(~sex+svafit$sv)
lmfit <- lmFit(geneExpression,svaX)
tt<- lmfit$coef[,2]*sqrt(lmfit$df.residual)/(2*lmfit$sigma)
res <- data.frame(dm= -lmfit$coef[,2], p.value=2*(1-pt(abs(tt),lmfit$df.residual[1]) ) )
qvals <- qvalue(res$p.value)$qvalue
index <- which(qvals<0.1)
length(index)
chrx<- sum(chr[index]=="chrY",na.rm=TRUE)
chry<- sum(chr[index]=="chrX",na.rm=TRUE)
chrx
chry
sum(chrx + chry)
library(exprs)
library(Bioconductor)
geneExpression = exprs(e)
sampleInfo = pData(e)
?exprs
source("https://bioconductor.org/biocLite.R")
install_bioc("exprs")
geneExpression = exprs(e)
sampleInfo = pData(e)
source("https://bioconductor.org/biocLite.R")
install_bioc("exprs")
